{"ast":null,"code":"var _jsxFileName = \"/home/reuven/homework/Appsforce-Home-Assignment/post-hub-ui/src/pages/Postsuser.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { PostsService } from '../services/posts.service';\nimport PostsTable from '../components/postsTable';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport '../assets/css/posts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsUser = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const socket = io('http://localhost:8001');\n    socket.on('postDeleted', checkForPostDeleted);\n    socket.on('postCreated', checkForNewPosts);\n    return () => {\n      if (socket) {\n        socket.disconnect();\n      }\n    };\n  }, []);\n  const fetchPostsByUser = async () => {\n    setPosts(await PostsService.getUserPosts(Number(userId)));\n  };\n  useEffect(() => {\n    fetchPostsByUser();\n  }, [userId]);\n  const handleDeletePost = async postId => {\n    await PostsService.deletePostById(postId);\n  };\n  const handlePostCreated = async post => {\n    const newPost = {\n      ...post,\n      userId: Number(userId)\n    };\n    await PostsService.createPost(newPost);\n  };\n  const checkForNewPosts = async post => {\n    console.log('checkForNewPosts', post);\n    setPosts({\n      ...prevPost,\n      ...post\n    });\n  };\n  const checkForPostDeleted = async postId => {\n    setPosts(prevPosts => prevPosts.filter(post => post.id !== Number(postId)));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PostsTable, {\n      posts: posts,\n      onDeletePost: handleDeletePost,\n      onCreatePost: handlePostCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(PostsUser, \"H6g/ODw3DmPYlnHtGvtlmLWiiXc=\", false, function () {\n  return [useParams];\n});\n_c = PostsUser;\nexport default PostsUser;\nvar _c;\n$RefreshReg$(_c, \"PostsUser\");","map":{"version":3,"names":["React","useEffect","useState","PostsService","PostsTable","useParams","io","jsxDEV","_jsxDEV","PostsUser","_s","userId","posts","setPosts","socket","on","checkForPostDeleted","checkForNewPosts","disconnect","fetchPostsByUser","getUserPosts","Number","handleDeletePost","postId","deletePostById","handlePostCreated","post","newPost","createPost","console","log","prevPost","prevPosts","filter","id","children","onDeletePost","onCreatePost","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/reuven/homework/Appsforce-Home-Assignment/post-hub-ui/src/pages/Postsuser.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { PostsService } from '../services/posts.service';\nimport PostsTable from '../components/postsTable';\nimport { useParams } from 'react-router-dom';\nimport { Post } from '../models/posts.interfaces';\nimport { io, Socket } from 'socket.io-client';\nimport '../assets/css/posts.css';\n\nconst PostsUser: React.FC = () => {\n  const { userId } = useParams();\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    const socket: Socket = io('http://localhost:8001');\n    socket.on('postDeleted', checkForPostDeleted);\n    socket.on('postCreated', checkForNewPosts);\n    return () => {\n      if (socket) {\n        socket.disconnect();\n      }\n    };\n  }, []);\n\n  const fetchPostsByUser = async () => {\n    setPosts(await PostsService.getUserPosts(Number(userId)));\n  };\n\n  useEffect(() => {\n    fetchPostsByUser();\n  }, [userId]);\n\n  const handleDeletePost = async (postId: number) => {\n    await PostsService.deletePostById(postId);\n  };\n\n  const handlePostCreated = async (post: Post) => {\n    const newPost = { ...post, userId: Number(userId) };\n    await PostsService.createPost(newPost);\n  };\n\n  const checkForNewPosts = async (post: Post) => {\n    console.log('checkForNewPosts', post);\n\n    setPosts({...prevPost, ...post});\n  };\n\n  const checkForPostDeleted = async (postId: number) => {\n    setPosts((prevPosts) =>\n      prevPosts.filter((post) => post.id !== Number(postId)),\n    );\n  };\n\n  return (\n    <div>\n      <PostsTable\n        posts={posts}\n        onDeletePost={handleDeletePost}\n        onCreatePost={handlePostCreated}\n      />\n    </div>\n  );\n};\n\nexport default PostsUser;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,2BAA2B;AACxD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,SAASC,EAAE,QAAgB,kBAAkB;AAC7C,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMa,MAAc,GAAGR,EAAE,CAAC,uBAAuB,CAAC;IAClDQ,MAAM,CAACC,EAAE,CAAC,aAAa,EAAEC,mBAAmB,CAAC;IAC7CF,MAAM,CAACC,EAAE,CAAC,aAAa,EAAEE,gBAAgB,CAAC;IAC1C,OAAO,MAAM;MACX,IAAIH,MAAM,EAAE;QACVA,MAAM,CAACI,UAAU,CAAC,CAAC;MACrB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnCN,QAAQ,CAAC,MAAMV,YAAY,CAACiB,YAAY,CAACC,MAAM,CAACV,MAAM,CAAC,CAAC,CAAC;EAC3D,CAAC;EAEDV,SAAS,CAAC,MAAM;IACdkB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,MAAMW,gBAAgB,GAAG,MAAOC,MAAc,IAAK;IACjD,MAAMpB,YAAY,CAACqB,cAAc,CAACD,MAAM,CAAC;EAC3C,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAOC,IAAU,IAAK;IAC9C,MAAMC,OAAO,GAAG;MAAE,GAAGD,IAAI;MAAEf,MAAM,EAAEU,MAAM,CAACV,MAAM;IAAE,CAAC;IACnD,MAAMR,YAAY,CAACyB,UAAU,CAACD,OAAO,CAAC;EACxC,CAAC;EAED,MAAMV,gBAAgB,GAAG,MAAOS,IAAU,IAAK;IAC7CG,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,IAAI,CAAC;IAErCb,QAAQ,CAAC;MAAC,GAAGkB,QAAQ;MAAE,GAAGL;IAAI,CAAC,CAAC;EAClC,CAAC;EAED,MAAMV,mBAAmB,GAAG,MAAOO,MAAc,IAAK;IACpDV,QAAQ,CAAEmB,SAAS,IACjBA,SAAS,CAACC,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACQ,EAAE,KAAKb,MAAM,CAACE,MAAM,CAAC,CACvD,CAAC;EACH,CAAC;EAED,oBACEf,OAAA;IAAA2B,QAAA,eACE3B,OAAA,CAACJ,UAAU;MACTQ,KAAK,EAAEA,KAAM;MACbwB,YAAY,EAAEd,gBAAiB;MAC/Be,YAAY,EAAEZ;IAAkB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CArDID,SAAmB;EAAA,QACJJ,SAAS;AAAA;AAAAqC,EAAA,GADxBjC,SAAmB;AAuDzB,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}