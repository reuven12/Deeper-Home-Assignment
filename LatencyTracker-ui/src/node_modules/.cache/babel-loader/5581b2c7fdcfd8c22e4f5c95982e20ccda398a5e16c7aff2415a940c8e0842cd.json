{"ast":null,"code":"var _jsxFileName = \"/home/reuven/homework/Appsforce-Home-Assignment/post-hub-ui/src/pages/Postsuser.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { PostsService } from '../services/posts.service';\nimport PostsTable from '../components/postsTable';\nimport { useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport '../assets/css/posts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsUser = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [deletePost, setDeletePost] = useState(null);\n  useEffect(() => {\n    const fetchPostsByUser = async () => {\n      setPosts(await PostsService.getUserPosts(Number(userId)));\n    };\n    fetchPostsByUser();\n  }, [userId]);\n  useEffect(() => {\n    const socket = io('ws://localhost:3000');\n    socket.socket.on('postDeleted', deletedPostId => {\n      setPosts(prevPosts => prevPosts.filter(post => post.id !== deletedPostId));\n    });\n    return () => {\n      socket.disconnect();\n    };\n  });\n  useEffect(() => {\n    const deletePostById = async () => {\n      if (deletePost) {\n        await PostsService.deletePostById(deletePost.id);\n      }\n    };\n    deletePostById();\n  }, [deletePost]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PostsTable, {\n      posts: posts,\n      setDeletePost: setDeletePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(PostsUser, \"HuD7zToPc9aCx8IVendt/y2KfQk=\", false, function () {\n  return [useParams];\n});\n_c = PostsUser;\nexport default PostsUser;\nvar _c;\n$RefreshReg$(_c, \"PostsUser\");","map":{"version":3,"names":["React","useEffect","useState","PostsService","PostsTable","useParams","io","jsxDEV","_jsxDEV","PostsUser","_s","userId","posts","setPosts","deletePost","setDeletePost","fetchPostsByUser","getUserPosts","Number","socket","on","deletedPostId","prevPosts","filter","post","id","disconnect","deletePostById","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/reuven/homework/Appsforce-Home-Assignment/post-hub-ui/src/pages/Postsuser.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { PostsService } from '../services/posts.service';\nimport PostsTable from '../components/postsTable';\nimport { useParams } from 'react-router-dom';\nimport { Post } from '../models/posts.interfaces';\nimport io from 'socket.io-client';\nimport '../assets/css/posts.css';\n\nconst PostsUser: React.FC = () => {\n  const { userId } = useParams();\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [deletePost, setDeletePost] = useState<Post | null>(null);\n\n  useEffect(() => {\n    const fetchPostsByUser = async () => {\n      setPosts(await PostsService.getUserPosts(Number(userId)));\n    };\n    fetchPostsByUser();\n  }, [userId]);\n\n  useEffect(() => {\n    const socket = io('ws://localhost:3000');\n    socket.\n    socket.on('postDeleted', (deletedPostId: number) => {\n      setPosts((prevPosts) =>\n        prevPosts.filter((post) => post.id !== deletedPostId),\n      );\n    });\n    return () => {\n      socket.disconnect();\n    };\n  });\n\n  useEffect(() => {\n    const deletePostById = async () => {\n      if (deletePost) {\n        await PostsService.deletePostById(deletePost.id);\n      }\n    };\n    deletePostById();\n  }, [deletePost]);\n\n  return (\n    <div>\n      <PostsTable posts={posts} setDeletePost={setDeletePost} />\n    </div>\n  );\n};\n\nexport default PostsUser;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,2BAA2B;AACxD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAc,IAAI,CAAC;EAE/DD,SAAS,CAAC,MAAM;IACd,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnCH,QAAQ,CAAC,MAAMV,YAAY,CAACc,YAAY,CAACC,MAAM,CAACP,MAAM,CAAC,CAAC,CAAC;IAC3D,CAAC;IACDK,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZV,SAAS,CAAC,MAAM;IACd,MAAMkB,MAAM,GAAGb,EAAE,CAAC,qBAAqB,CAAC;IACxCa,MAAM,CACNA,MAAM,CAACC,EAAE,CAAC,aAAa,EAAGC,aAAqB,IAAK;MAClDR,QAAQ,CAAES,SAAS,IACjBA,SAAS,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,aAAa,CACtD,CAAC;IACH,CAAC,CAAC;IACF,OAAO,MAAM;MACXF,MAAM,CAACO,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,CAAC;EAEFzB,SAAS,CAAC,MAAM;IACd,MAAM0B,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAIb,UAAU,EAAE;QACd,MAAMX,YAAY,CAACwB,cAAc,CAACb,UAAU,CAACW,EAAE,CAAC;MAClD;IACF,CAAC;IACDE,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACb,UAAU,CAAC,CAAC;EAEhB,oBACEN,OAAA;IAAAoB,QAAA,eACEpB,OAAA,CAACJ,UAAU;MAACQ,KAAK,EAAEA,KAAM;MAACG,aAAa,EAAEA;IAAc;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAACtB,EAAA,CAvCID,SAAmB;EAAA,QACJJ,SAAS;AAAA;AAAA4B,EAAA,GADxBxB,SAAmB;AAyCzB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}