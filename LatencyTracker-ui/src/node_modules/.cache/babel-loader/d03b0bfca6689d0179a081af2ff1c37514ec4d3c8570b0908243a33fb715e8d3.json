{"ast":null,"code":"var _jsxFileName = \"/home/reuven/homework/Appsforce-Home-Assignment/post-hub-ui/src/pages/Postsuser.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { PostsService } from '../services/posts.service';\nimport PostsTable from '../components/postsTable';\nimport { useParams } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport { PostsStore } from '../store/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsUser = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [deletePost, setDeletePost] = useState(null);\n  const postsStore = new PostsStore();\n  useEffect(() => {\n    const fetchPostsByUser = async () => {\n      const postsData = await PostsService.getUserPosts(Number(userId));\n      postsStore.setPosts(postsData);\n      setPosts(postsStore.posts);\n    };\n    fetchPostsByUser();\n  }, [userId]);\n  useEffect(() => {\n    const deletePostById = async () => {\n      if (deletePost) {\n        await PostsService.deletePostById(deletePost.id);\n        setPosts(posts.filter(post => post.id !== deletePost.id));\n      }\n    };\n    deletePostById();\n  }, [deletePost]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PostsTable, {\n      posts: posts,\n      setDeletePost: setDeletePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}, \"wafuqjVMRNSf1o3bWgMYeO9orPI=\", false, function () {\n  return [useParams];\n})), \"wafuqjVMRNSf1o3bWgMYeO9orPI=\", false, function () {\n  return [useParams];\n});\n_c2 = PostsUser;\nexport default PostsUser;\nvar _c, _c2;\n$RefreshReg$(_c, \"PostsUser$observer\");\n$RefreshReg$(_c2, \"PostsUser\");","map":{"version":3,"names":["React","useEffect","useState","PostsService","PostsTable","useParams","observer","PostsStore","jsxDEV","_jsxDEV","PostsUser","_s","_c","userId","posts","setPosts","deletePost","setDeletePost","postsStore","fetchPostsByUser","postsData","getUserPosts","Number","deletePostById","id","filter","post","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/reuven/homework/Appsforce-Home-Assignment/post-hub-ui/src/pages/Postsuser.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { PostsService } from '../services/posts.service';\nimport PostsTable from '../components/postsTable';\nimport { useParams } from 'react-router-dom';\nimport { Post } from '../models/posts.interfaces';\nimport { observer } from 'mobx-react';\nimport { PostsStore } from '../store/posts';\n\nconst PostsUser: React.FC = observer(() => {\n  const { userId } = useParams();\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [deletePost, setDeletePost] = useState<Post | null>(null);\n  const postsStore = new PostsStore();\n\n  useEffect(() => {\n    const fetchPostsByUser = async () => {\n      const postsData: Post[] = await PostsService.getUserPosts(Number(userId));\n      postsStore.setPosts(postsData);\n      setPosts(postsStore.posts);\n    };\n    fetchPostsByUser();\n  }, [userId]);\n\n  useEffect(() => {\n    const deletePostById = async () => {\n      if (deletePost) {\n        await PostsService.deletePostById(deletePost.id);\n        setPosts(posts.filter((post) => post.id !== deletePost.id));\n      }\n    };\n    deletePostById();\n  }, [deletePost]);\n\n  return (\n    <div>\n      <PostsTable posts={posts} setDeletePost={setDeletePost} />\n    </div>\n  );\n});\n\nexport default PostsUser;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,2BAA2B;AACxD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,UAAU,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAmB,GAAAC,EAAA,CAAGL,QAAQ,CAAAM,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EACzC,MAAM;IAAEE;EAAO,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAc,IAAI,CAAC;EAC/D,MAAMgB,UAAU,GAAG,IAAIX,UAAU,CAAC,CAAC;EAEnCN,SAAS,CAAC,MAAM;IACd,MAAMkB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAMC,SAAiB,GAAG,MAAMjB,YAAY,CAACkB,YAAY,CAACC,MAAM,CAACT,MAAM,CAAC,CAAC;MACzEK,UAAU,CAACH,QAAQ,CAACK,SAAS,CAAC;MAC9BL,QAAQ,CAACG,UAAU,CAACJ,KAAK,CAAC;IAC5B,CAAC;IACDK,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZZ,SAAS,CAAC,MAAM;IACd,MAAMsB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAIP,UAAU,EAAE;QACd,MAAMb,YAAY,CAACoB,cAAc,CAACP,UAAU,CAACQ,EAAE,CAAC;QAChDT,QAAQ,CAACD,KAAK,CAACW,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKR,UAAU,CAACQ,EAAE,CAAC,CAAC;MAC7D;IACF,CAAC;IACDD,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACP,UAAU,CAAC,CAAC;EAEhB,oBACEP,OAAA;IAAAkB,QAAA,eACElB,OAAA,CAACL,UAAU;MAACU,KAAK,EAAEA,KAAM;MAACG,aAAa,EAAEA;IAAc;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;EAAA,QA7BoB1B,SAAS;AAAA,EA6B7B,CAAC;EAAA,QA7BmBA,SAAS;AAAA,EA6B5B;AAAC2B,GAAA,GA9BGtB,SAAmB;AAgCzB,eAAeA,SAAS;AAAC,IAAAE,EAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}